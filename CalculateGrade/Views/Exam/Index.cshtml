@model CalculateGrade.Models.ExamModel
@{
    ViewData["Title"] = "Phát sinh đề bài";
}
<style>
    h1 {
        text-align: center;
        margin-bottom: 30px;
        color: #3498db;
    }
    .custom-file-upload {
        position: relative;
        display: block;
        width: 20%;
        margin-bottom: 20px;
    }

    .custom-file-upload input[type="file"] {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }

    .custom-file-upload-label {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        cursor: pointer;
        display: flex;
        align-items: center;
    }

    .custom-file-upload-label i {
        margin-right: 10px;
    }

    .custom-file-upload .file-name {
        display: block;
        margin-top: 20px;
        font-size: 1rem;
        color: #6c757d;
    }

    .file-name-requirement
    {
        margin-top: 20px;
    }
    #Syllabus {
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        padding: 30px;
        overflow-x: auto;
        height: 500px;
    }

    .card-body {
        background-color: #fff;
        border-radius: 0.25rem;
        padding: 1.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transform: translateY(10px); /* Dịch lên trên 10px */
        transition: all 0.3s ease;
        margin-right: 10px;
        height: 700px;
    }

        .card-body:hover {
            opacity: 1; /* Hiển thị khi hover */
            transform: translateY(0); /* Trở về vị trí ban đầu */
            box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Thêm shadow */
        }

    .dots-5 {
        width: 15px;
        aspect-ratio: 1;
        border-radius: 50%;
        animation: d5 1s infinite linear alternate;
    }

    @@keyframes d5 {
        0% {
            box-shadow: 20px 0 #000, -20px 0 #0002;
            background: #000
        }

        33% {
            box-shadow: 20px 0 #000, -20px 0 #0002;
            background: #0002
        }

        66% {
            box-shadow: 20px 0 #0002,-20px 0 #000;
            background: #0002
        }

        100% {
            box-shadow: 20px 0 #0002,-20px 0 #000;
            background: #000
        }
    }

    .select-button {
        margin-top: 20px;
        background-color: #28a745;
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 25px;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    #feedback1 {
        color: #3498db;
        text-align: left;
        overflow-y: auto;
    }

    #feedback2 {
        color: #27ae60;
        text-align: left;
        overflow-y: auto;
    }
</style>

<div>
    <h1 class="display-4">@ViewData["Title"]</h1>
    <form id="examArising" enctype="multipart/form-data">
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Tải file đề bài mẫu
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="form-group custom-file-upload">
                            <label for="requirementFile">Tải lên đề bài (.docx):</label>
                            <input type="file" class="form-control-file" id="requirementFile" name="requirementFile" accept=".docx" required>
                            <label for="requirementFile" class="custom-file-upload-label">
                                <i class="fas fa-file-upload"></i> Chọn file đề bài
                            </label>
                            <div class="file-name-requirement">
                                <p>Không có file nào được chọn</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Syllabus
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="form-group">
                            <div id="Syllabus" contenteditable="true">@Html.Raw(Model.Syllabus)</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Chọn model
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Model1">Model 1:</label>
                                    <select class="form-control" id="Model1" name="Model1">
                                        <option value="gemini-1.5-flash-002" selected>gemini-1.5-flash</option>
                                        <option value="gemini-1.5-pro-002">gemini-1.5-pro</option>
                                        <option value="mixtral-8x7b-32768">mixtral-8x7b-32768</option>
                                        <option value="llama3-8b-8192">llama3-8b-8192</option>
                                        <option value="gemma2-9b-it">gemma2-9b-it</option>
                                        <option value="llama-3.2-3b-preview">llama-3.2-3b-preview</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Model2">Model 2:</label>
                                    <select class="form-control" id="Model2" name="Model2">
                                        <option value="gemini-1.5-flash-002">gemini-1.5-flash</option>
                                        <option value="gemini-1.5-pro-002">gemini-1.5-pro</option>
                                        <option value="mixtral-8x7b-32768">mixtral-8x7b-32768</option>
                                        <option value="llama3-8b-8192">llama3-8b-8192</option>
                                        <option value="gemma2-9b-it" selected>gemma2-9b-it</option>
                                        <option value="llama-3.2-3b-preview">llama-3.2-3b-preview</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <button type="button" class="btn btn-secondary" id="btnExamArise">
                    Generate
                </button>
            </div>
        </div>
    </form>
    <div class="row mt-5" id="results" style="display:none;">
        <div class="col-md-6">
            <div class="card-body d-flex flex-column">
                <div class="loading-container d-flex align-items-center justify-content-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
                    <div class="dots-5" id="loadingFeedback1" role="status" aria-hidden="true" style="display:none"></div>
                </div>
                <div id="feedback1">
                </div>
            </div>
            <div>
                <button type="button" class="select-button" id="convertButton" onclick="download(1)">
                    Download
                </button>
            </div>
            
        </div>
        <div class="col-md-6">
            <div class="card-body d-flex flex-column">
                <div class="loading-container d-flex align-items-center justify-content-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
                    <div class="dots-5" id="loadingFeedback2" role="status" aria-hidden="true" style="display:none"></div>
                </div>
                <div id="feedback2">
                </div>
            </div>
            <div>
                <button type="button" class="select-button" id="convertButton" onclick="download(2)">
                    Download
                </button>
            </div>          
        </div>
    </div>
    
</div>
@section Scripts{
<script>

        const requirementFileInput = document.getElementById('requirementFile');
        const fileNameRequirementContainer = document.querySelector('.file-name-requirement');
        function displayFileNames(input, container) {
            if (input.files.length > 0) {
                for (let i = 0; i < input.files.length; i++) {
                    const fileName = input.files[i].name;
                    const fileElement = document.createElement('p');
                    fileElement.textContent = `${i + 1}. ${fileName}`;
                    container.appendChild(fileElement);
                }
            } else {
                const noFileElement = document.createElement('p');
                noFileElement.textContent = 'Không có file nào được chọn';
                container.appendChild(noFileElement);
            }
        }

        requirementFileInput.addEventListener('change', function () {
            displayFileNames(this, fileNameRequirementContainer);
        });

        $(document).ready(function () {
            $("#btnExamArise").click(function () {
                if (validate()) {
                    $("#results").show();
                    $("#loadingFeedback1").show();
                    $("#loadingFeedback2").show();
                    scrollToElement('#results');
                    submitForm('@Url.Action("ExamArise", "Exam")');
                }
            });

            
        });
        function submitForm(url) {
            var formData = new FormData();
            var syllabus = document.getElementById("Syllabus").textContent;
            // Lấy giá trị từ các input và thêm vào FormData
            formData.append("requirementFile", $("#requirementFile")[0].files[0]);
            formData.append("Syllabus", syllabus);
            formData.append("Model1", $("#Model1").val());
            formData.append("Model2", $("#Model2").val());

            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $("#feedback1").html(response.resultGoogle);
                    $("#feedback2").html(response.resultGroq);
                    $("#loadingFeedback1").hide();
                    $("#loadingFeedback2").hide();
                },
                error: function () {
                    alert("Đã xảy ra lỗi.");
                    $("#feedback1").html('đã xảy ra lỗi');
                    $("#feedback2").html('đã xảy ra lỗi');
                    $("#loadingFeedback1").hide();
                    $("#loadingFeedback2").hide();
                }
            });
        }

        function download(i) {
            var htmlContent;
            if (i === 1) {
                htmlContent = document.getElementById('feedback1').innerHTML;
            }
            else {
                htmlContent = document.getElementById('feedback2').innerHTML;
            }
            $.ajax({
                url: '@Url.Action("ConvertToWord", "Exam")', // Thay 'your-controller' bằng tên controller của bạn
                type: 'POST',
                data: { htmlContent: htmlContent },
                xhrFields: {
                    responseType: 'blob' // Cấu hình responseType là 'blob'
                },
                success: function (response) {
                    var url = window.URL.createObjectURL(response);

                    // Tạo một link ẩn để download file
                    var a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = generateFileName();

                    // Thêm link vào DOM và click vào nó
                    document.body.appendChild(a);
                    a.click();

                    // Xóa link và URL tạm thời
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("Đã xảy ra lỗi khi chuyển đổi sang Word.");
                }
            });
        }

        function generateFileName() {
            const now = new Date();
            const year = now.getFullYear();
            const month = (now.getMonth() + 1).toString().padStart(2, '0'); // Tháng + 1, thêm số 0 ở đầu nếu cần
            const day = now.getDate().toString().padStart(2, '0');
            const hours = now.getHours().toString().padStart(2, '0');
            const minutes = now.getMinutes().toString().padStart(2, '0');
            const seconds = now.getSeconds().toString().padStart(2, '0');

            return `DeThi${year}${month}${day}${hours}${minutes}${seconds}.docx`;
        }

        function validate() {
            // Kiểm tra xem có file được chọn cho input "requirementFile" hay không
            if ($('#requirementFile')[0].files.length === 0) {
                alert('Vui lòng chọn file đề bài!');
                return false;
            }

            // Kiểm tra nội dung syllabus
            const syllabus = document.getElementById("Syllabus");

            if (syllabus.textContent.replace(/\s/g, '') === "") {
                alert('Vui lòng nhập nội dung Syllabus!');
                return false;
            }

            return true; // Form hợp lệ
        }
        function scrollToElement(elementId) {
            const element = document.querySelector(elementId);

            if (element) {
                // Sử dụng `element.scrollIntoView()` để scroll đến element
                element.scrollIntoView({
                    behavior: 'smooth', // Scroll mượt mà
                    block: 'start' // Căn chỉnh element với đầu màn hình
                });
            }
        }
        $(document).ready(function () {
            // Kiểm tra giá trị của Syllabus
            var syllabusContent = $("#Syllabus").text().trim(); // Lấy nội dung text và loại bỏ khoảng trắng
            if (syllabusContent !== "") { // Kiểm tra xem có nội dung hay không
                $("#collapseTwo").addClass("show"); // Mở rộng item accordion
                $("#collapseTwo").prev().find(".accordion-button").removeClass("collapsed").attr("aria-expanded", "true"); // Cập nhật trạng thái button
            }
        });
</script>
}
