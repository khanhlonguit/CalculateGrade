@model CalculateGrade.Models.SyllabusModel
@{
    ViewData["Title"] = "View";
}
<style>
    /* General styles */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f8f9fa;
        color: #343a40;
    }

    h3{
        padding-bottom: 20px;
    }

    .text-center {
        padding: 2rem 0;
    }

    .display-4 {
        font-weight: 600;
        color: #007bff;
    }

    /* Form styles */
    .form-group {
        /* margin-bottom: 1.5rem; */
    }

    label {
        margin-bottom: 0.5rem;
        font-weight: 500;
    }


    /* Results section */
    .row {
        /* margin-top: 2rem; */
    }

    .col-md-6 {
       /*  padding: 1rem; */
    }

    .card-body {
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        padding: 1.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transform: translateY(10px); /* Dịch lên trên 10px */
        transition: all 0.3s ease;
        height: 600px;
        margin-right: 10px;
    }

    /* Button styles */
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0062cc;
        border-color: #005cbf;
        box-shadow: 0px 4px 8px rgba(0, 123, 255, 0.3);
    }

    #select_result {
        background-color: #28a745;
        border-color: #28a745;
        color: white;
        transition: all 0.3s ease;
    }

    #select_result:hover {
        background-color: #218838;
        border-color: #1e7e34;
        box-shadow: 0px 4px 8px rgba(40, 167, 69, 0.3);
    }

    #ResultModel1,
    #ResultModel2 {
        text-align: left;
        max-height: 550px;
        overflow-y: auto;
    }

    .card-body:hover{
        opacity: 1; /* Hiển thị khi hover */
        transform: translateY(0); /* Trở về vị trí ban đầu */
        box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Thêm shadow */
    }

    .select-button{
        margin-top: 20px;
        
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 25px;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    #select-button-exam{
        background-color: #0062cc;
    }
    #select-button-grade{
        background-color: #28a745;
    }
    .custom-form {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 30px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .custom-file-upload {
        position: relative;
        display: flex; /* Sử dụng flexbox để sắp xếp các phần tử con */
        align-items: center; /* Căn giữa các phần tử con theo chiều dọc */
        width: 80%;
        /* margin-bottom: 20px; */
    }

    .custom-file-upload input[type="file"] {
        position: relative; /* Thay đổi position thành relative */
        width: 0.1px; /* Đặt width rất nhỏ để input không chiếm diện tích hiển thị */
        height: 100%;
        opacity: 0;
        cursor: pointer;
        z-index: 2; /* Đảm bảo input nằm trên label */
    }

    .custom-file-upload-label {
        position: relative; /* Thay đổi position thành relative */
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        z-index: 1; /* Đảm bảo label nằm dưới input */
    }

    .custom-file-upload-label i {
        margin-right: 10px;
    }

    .custom-file-upload .file-name {
        display: inline-block; /* Thay đổi display thành inline-block */
        margin-left: 10px; /* Thêm margin-left để tạo khoảng cách */
        font-size: 1rem;
        font-weight: bold;
        color: #6c757d;
    }
    .form-group label {
        font-weight: 600;
        color: #2c3e50;
    }
    .dots-5 {
      width: 15px;
      aspect-ratio: 1;
      border-radius: 50%;
      animation: d5 1s infinite linear alternate;
    }
    @@keyframes d5 {
        0%  {box-shadow: 20px 0 #000, -20px 0 #0002;background: #000 }
        33% {box-shadow: 20px 0 #000, -20px 0 #0002;background: #0002}
        66% {box-shadow: 20px 0 #0002,-20px 0 #000; background: #0002}
        100%{box-shadow: 20px 0 #0002,-20px 0 #000; background: #000 }
    }

    .accordion-button{
        font-weight: bold;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Tóm tắt Syllabus</h1>
    <form enctype="multipart/form-data">
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        STEP 1: Chọn file Syllabus
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="form-group custom-file-upload">
                            <label for="SyllabusFile" style="margin: 10px;">Chọn file</label>
                            <input type="file" class="form-control-file" id="SyllabusFile" name="SyllabusFile" accept=".docx" required>
                            <label for="SyllabusFile" class="custom-file-upload-label">
                                <i class="fas fa-file-upload"></i> Chọn Syllabus file
                            </label>
                            <span class="file-name">Không có file nào được chọn</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                        STEP 2: Chọn model để đưa ra kết quả
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        @Html.Partial("_SyllabusModelSelector")
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="row-result" style="display: flex;">
        <div id="result_model1" class="col-md-6">
            <div class="d-flex flex-column">               
                <div class="card-body flex-grow-1 overflow-auto">
                    <div class="loading-container d-flex align-items-center justify-content-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
                        <div class="dots-5" id="loading1" role="status" aria-hidden="true" style="display:none"></div>
                    </div>
                    <div id="ResultModel1">
                    </div>
                </div>                
            </div>
            <div class="mt-auto">
                <button type="button" class="select-button" id="select-button-grade" onclick="selectResult(1, '@Url.Action("Index", "Home")')">
                    Chọn Syllabus chấm điểm
                </button>
                <button type="button" class="select-button" id="select-button-exam" onclick="selectResult(1, '@Url.Action("Index", "Exam")')">
                    Chọn Syllabus phát sinh đề thi
                </button>
            </div>
        </div>
        
        <div id="result_model2" class="col-md-6">           
            <div class="d-flex flex-column">
                <div class="card-body flex-grow-1 overflow-auto">
                    <div class="loading-container d-flex align-items-center justify-content-center" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
                        <div class="dots-5" id="loading2" role="status" aria-hidden="true" style="display:none"></div>
                    </div>
                    <div id="ResultModel2">
                    </div>
                </div>             
            </div>
            <div class="mt-auto">
                <button type="button" class="select-button" id="select-button-grade" onclick="selectResult(2, '@Url.Action("Index", "Home")')">
                    Chọn Syllabus chấm điểm
                </button>
                <button type="button" class="select-button" id="select-button-exam" onclick="selectResult(2, '@Url.Action("Index", "Exam")')">
                    Chọn Syllabus phát sinh đề thi
                </button>
            </div>
        </div>       
    </div>
</div>
@section Scripts{
<script>
        const fileInputs = document.querySelectorAll('.custom-file-upload input[type="file"]');
        const model1 = document.getElementById("Model1");
        const model2 = document.getElementById("Model2");
        fileInputs.forEach(input => {
            input.addEventListener('change', () => {
                if (input.files.length >= 1) {
                    var file = input.files[0];
                    var formData = new FormData();
                    formData.append("file", file);
                    $.ajax({
                        url: '@Url.Action("GetHeading1", "Syllabus")',
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            $(".file-name").text(response.heading1);
                        },
                        error: function () {
                            alert("Đã xảy ra lỗi.");
                        }
                    });
                }
                else {
                    $(".file-name").text("Không có file nào được chọn")
                }
                
            });
        });
        $(document).ready(function () {
            $("#GenerateModel1").click(function () {
                $("#ResultModel1").empty();
                $("#loading1").show();
                // $("#result_model1").show();
                scrollToElement('#result_model1');
                submitFormModel1('@Url.Action("GenerateModel1", "Syllabus")');               
            });

            $("#GenerateModel2").click(function () {
                $("#ResultModel2").empty();
                $("#loading2").show();
                // $("#result_model2").show();
                scrollToElement('#result_model2');
                submitFormModel2('@Url.Action("GenerateModel1", "Syllabus")');
                
            });
        });
        function submitFormModel1(url) {
            var formData = new FormData();
            console.log($("#Model1").val())
            // Lấy giá trị từ các input và thêm vào FormData
            formData.append("SyllabusFile", $("#SyllabusFile")[0].files[0]);
            formData.append("Model", $("#Model1").val());
            sessionStorage.setItem('examFormData', JSON.stringify(formData));
            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $("#Model1-header").text(model1.value);
                    $("#ResultModel1").html(response.resultModel);
                    $("#loading1").hide();
                },
                error: function () {
                    alert("Đã xảy ra lỗi.");
                    $("#loading1").hide();
                }
            });
        }
        function submitFormModel2(url) {
            var formData = new FormData();
            console.log($("#Model2").val())
            // Lấy giá trị từ các input và thêm vào FormData
            formData.append("SyllabusFile", $("#SyllabusFile")[0].files[0]);
            formData.append("Model", $("#Model2").val());

            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $("#Model2-header").text(model2.value);
                    $("#ResultModel2").html(response.resultModel);
                    $("#result_model2").show();
                    $("#loading2").hide();
                },
                error: function () {
                    alert("Đã xảy ra lỗi.");
                    $("#loading2").hide();
                }
            });
        }

        function selectResult(i, url) {
            var result;
            if (i === 1) {
                result = document.getElementById("ResultModel1").innerHTML;
            }
            else {
                result = document.getElementById("ResultModel2").innerHTML;
            }
            console.log(result);

            $.ajax({
                url: '@Url.Action("SaveResult", "Syllabus")',
                type: "POST",
                data: { result: result },
                success: function (response) {
                    window.location.href = url;
                    alert("Lưu kết quả thành công!");
                },
                error: function () {
                    alert("Đã xảy ra lỗi.");
                }
            });
        }
        function scrollToElement(elementId) {
            const element = document.querySelector(elementId);

            if (element) {
                // Sử dụng `element.scrollIntoView()` để scroll đến element
                element.scrollIntoView({
                    behavior: 'smooth', // Scroll mượt mà
                    block: 'start' // Căn chỉnh element với đầu màn hình
                });
            }
        }
</script>
}
